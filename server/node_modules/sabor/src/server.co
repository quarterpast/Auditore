http = require \q-http
Q = require \q
qs = require \querystring
url = require \url

class Timer
	(@id)~> console.time id
	end: ->console.timeEnd @id

exports.Serve = (routes)->
	server = http.Server (req)~>
		uri = url.parse req.url
		req.get = uri.query
		req.post = if req.method is \POST
			req.body.read().then (data)->
				qs.parse data.toString \utf8
		else Q.when {}
		t = Timer "#{process.pid} #{req.connection.remoteAddress} #{req.path}"
		for p,route in routes
			reg = RegExp "^#{p}$"
			continue unless reg.test uri.pathname

			[m,...args] = reg.exec uri.pathname
			args = for a of args
				if a == +a then +a else a
			return Q.when route req,...args .then (res)->
				if typeof res is \object and res not instanceof Buffer
					return {onclose: t~end} <<< res
				return
					body: if res.forEach? then res else [res]
					status: 200
					onclose: t~end
		return status:404 body:["fail #{req.path}"] onclose: ->
			t.end!
	server <<<
		add: (more)->
			routes <<< more